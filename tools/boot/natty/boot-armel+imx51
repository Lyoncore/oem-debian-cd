#!/bin/bash
#
# Do install stuff for armel+imx51, including making bootable CDs
# Works with debian-installer
#
# $1 is the CD number
# $2 is the temporary CD build dir
#
# TODO
# - hardcodes flavour

. $BASEDIR/tools/boot/$DI_CODENAME/common.sh

set -e

N=$1
CDDIR=$2
BOOTDIR=
if [ "$DI_WWW_HOME" = "default" ];then
   DI_WWW_HOME="http://people.debian.org/~joeyh/d-i/images/daily"
fi
if [ ! "$DI_DIST" ]; then
   export DI_DIST="$DI_CODENAME"
fi
if [ -z "$DI_PATH" ]; then
   DI_PATH="$($BASEDIR/tools/find-newest-installer)"
fi

default_preseed

cd $CDDIR/..

#
# This script is called with $1 (now $N) as the CD to.
# make bootable.  N may be in the form "n" or "n_NONUS"
# There may be more than 4 disks...support extras.

# Strip NONUS part of disk number
# NN will be 1...N so it can be used as an index
#
NN=`echo $N | sed -e 's/_NONUS//'`

if [ "$CDIMAGE_ADDON" ]; then
    # second disk, at least in spirit
    NN=2
fi

if [ "$IMAGE_FORMAT" = iso ]; then
    echo -n "-J -joliet-long " > $N.mkisofs_opts

    "$BASEDIR/tools/sorting_weights" "$N"
    echo -n "-sort $(pwd)/$N.weights " >> $N.mkisofs_opts
fi

if [ "$IMAGE_FORMAT" != vfat ]; then
    echo "armel booting for image format '$IMAGE_FORMAT' disabled for now"
    exit 0
fi

# XXX hardcodes SUBARCH / FLAVOUR
SUBARCH=imx51
FLAVOUR=imx51

BOOT_IMAGES="$SUBARCH/cdrom/initrd.gz"
DISK_IMAGES=""
TAR_IMAGES=""

if [ "$DI_WWW_HOME" ]; then
    echo "boot-armel does not support DI_WWW_HOME mode at the moment" >&2
    exit 1
fi
BOOT_IMAGE_KERNEL=`cd "$DI_PATH/current/images" && ls $SUBARCH/cdrom/vmlinuz*`
if [ -z "$BOOT_IMAGE_KERNEL" ]; then
    echo "no kernel found in $DI_PATH/current/images/$SUBARCH/cdrom/!" >&2
    exit 1
fi
BOOT_IMAGES="$BOOT_IMAGES $BOOT_IMAGE_KERNEL"

#### the snippet below was copied from the i386 version
# Download boot images
for image in MANIFEST.udebs $BOOT_IMAGES $DISK_IMAGES $TAR_IMAGES; do
    if [ ! -e "$image" ]; then
	dir=$(dirname $image)
	mkdir -p $dir
	if [ ! "$DI_WWW_HOME" ];then
		cp "$DI_PATH/current/images/$image" "$image"
	else
		wget "$DI_WWW_HOME/$image" -O "$image"
	fi
    fi
done

if [ "$BOOT_IMAGE_KERNEL" != "$SUBARCH/cdrom/vmlinuz" ]; then
    mv "$BOOT_IMAGE_KERNEL" "$SUBARCH/cdrom/vmlinuz"
fi


if [ "$NN" = "1" ]; then
    list_kernel_abis $BOOT_IMAGES | check_kernel_sync $FLAVOUR

    if [ "$CDIMAGE_INSTALL_BASE" = 1 ]; then
        cp -lf $SUBARCH/cdrom/vmlinuz $CDDIR/install/
        cp -lf $SUBARCH/cdrom/initrd.gz $CDDIR/install/
    fi

    if [ "$CDIMAGE_LIVE" = 1 ]; then
        mv $CDDIR/casper/filesystem.kernel-$FLAVOUR $CDDIR/casper/vmlinuz
        CASPER_INITRD="/casper/initrd$(initrd_suffix "$CDDIR/casper/filesystem.initrd-$FLAVOUR")"
        mv $CDDIR/casper/filesystem.initrd-$FLAVOUR "$CDDIR$CASPER_INITRD"
    fi
fi

# th,th, thats all
