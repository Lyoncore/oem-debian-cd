#!/bin/bash
#
# boot-m68k v 1.14 (c) Steve McIntyre <stevem@chiark.greenend.org.uk>,
# Chris Lawrence <lawrencc@debian.org>, Christian Steigies <cts@debian.org>, 
# Michael Schmitz <MSchmitz@lbl.gov>, Nick Holgate <holgate@debian.org>
# Released under GPL 31 Mar 1999
# See the file COPYING for license details
# Released as part of the slink_cd package, not much use standalone
#
# Do install stuff for m68k, including making bootable CDs
#
# Enjoy!  This is all completely free.
# - Chris Lawrence <lawrencc@debian.org>
#
# Rewritten by Steve McIntyre <stevem@chiark.greenend.org.uk> in sh to
# interface better with the slink_cd package and cope with the mirror
# layout, 28 Feb 1999.
# Hopefully this will do the same job as the python map stuff did, it
# appears to...
#
# If you're burning a CD, use the mkhybrid in potato (HFS is broken in the
# slink version of mkhybrid; at least it is for me).  Please don't use Joliet
# extensions; some Mac kernels have apparently been known to choke on them
# (and you really shouldn't be supporting a Microsoft Standard anyway :-)
#
# You may also want the following:
# * A copy of the Linux/m68k FAQ
# * A copy of my m68k-specific README and m68k-tools directories
# * The m68k kernel sources from sunsite.auc.dk:/projects/680x0
#   (Sunsite-Denmark is rsync-capable at sunsite.auc.dk::ftp)
#
# MVME/BVME users will love you if you also include the "tools" directory
# from the FTP site, since they may want/need rawwrite for MS-DOS.
#
# The first two items are in a tar file at master.debian.org:~lawrencc, along
# with a silly rsync script that will accomplish the last item.

set -e
#set -x

N=$1
CDDIR=$2

DISKSROOT="$MIRROR/dists/$CODENAME/main/disks-$ARCH/current"

cd $CDDIR/..

echo -n "--netatalk -J -hfs -probe -map $BASEDIR/data/hfs.map" \
	> $N.mkisofs_opts

# Only disk 1 bootable
if [ $N != 1 ]; then
	exit 0
fi

# Put CD boot image	into place
mkdir -p boot1/boot
cp $DISKSROOT/bvme6000/images-2.88/rescue.bin boot1/boot

echo -n " -b boot/rescue.bin -c boot/boot.catalog boot1" \
	>> $N.mkisofs_opts


cd $CDDIR/install

# Tools
cp $DISKSROOT/rawrite2.exe $CDDIR/install
cp $DISKSROOT/rawwrite.ttp $CDDIR/install
wget -q sunsite.auc.dk:/pub/os/linux/680x0/tools/dmesg.readme -O dmesg.readme
wget -q sunsite.auc.dk:/pub/os/linux/680x0/tools/dmesg        -O dmesg
chmod a+x dmesg

for TYPE in amiga atari bvme6000 mac mvme16x
do
	#vecho Installing $TYPE files
	if [ ! -d $TYPE/images-1.44 ] ; then
	    mkdir -p $TYPE/images-1.44
	fi

	cp $DISKSROOT/$TYPE/images-1.44/* $TYPE/images-1.44
done

# Atari extras
D=atari
S=$DISKSROOT/$D
cp $S/bootargs          $D
cp $S/bootstra.prg      $D
cp $S/install.doc       $D
cp $S/linux             $D
cp $S/root.bin          $D

# Amiga extras
D=amiga
S=$DISKSROOT/$D
cp $S/ReadMe_First*     $D
cp $S/StartInstall*     $D
cp $S/*.txt             $D
cp $S/*.txt.info        $D
cp $S/install.*         $D
cp $S/linux             $D
cp $S/root.bin          $D
cp $S/amiboot-5.6       $D
# Needs to be executable
chmod a+x $D/amiboot-5.6
cp $DISKSROOT/amiga.info     $CDDIR/install
cp $DISKSROOT/amiga.info     $CDDIR/install.info

# BVME6000 extras
D=bvme6000
S=$DISKSROOT/$D
cp $S/linuxbvme6000     $D
cp $S/rootbvme6000.bin  $D
cp $S/tftplilo.*        $D
cp $S/install.txt       $D
cp $S/bvmbug*           $D

# MVME16x extras
D=mvme16x
S=$DISKSROOT/$D
cp $S/linuxmvme16x      $D
cp $S/rootmvme16x.bin   $D
cp $S/tftplilo.*        $D
cp $S/install.txt       $D

# Mac extras
D=mac
S=$DISKSROOT/$D
cp $S/linux             $D
cp $S/root.bin          $D
cp $S/*.img             $D
cp $S/install/*         $D
 
##-----------------------------< end of file >------------------------------##
